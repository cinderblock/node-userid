name: Main

on:
  create:
  push:
    branches-ignore:
      - 'npm-check-updates'
  pull_request:

jobs:
  install-and-run-from-git:
    name: Test - Install & Run from Github

    runs-on: ubuntu-latest

    steps:
      - name: Enable color for Npm output
        run: echo color = always >> .npmrc

      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Install Node dependencies without building locally
        run: npm ci --ignore-scripts

      - name: 'Debug: List post build files'
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/build.list

      # Prepare Test Environment

      - name: Create Dummy Package.json
        run: echo '{"type":"module"}' > test/package.json

      - name: Install Current Version as Git Dependency
        working-directory: test
        run: npm install ${{ github.repository }}#${{ github.sha }}

      - name: 'Debug: List Dependency Folder Contents'
        working-directory: test
        run: find node_modules/userid -type f -print

      # Ensure the code works

      - name: Add long username and groupname for test
        run: sudo useradd NameWithMoreThan15Chars

      - name: Run Tests with Prepared Git Dependency
        run: npm test -- --color
        env:
          TEST_IMPORT_OVERRIDE: userid
          TEST_LONG_USERNAME: NameWithMoreThan15Chars
          TEST_LONG_GROUPNAME: NameWithMoreThan15Chars

  test-native-api:
    # We fully support importing/requiring the native API `.node` directly.
    # For historical reasons, the Native Node API is slightly different than the JavaScript API, so we have slightly different tests.

    name: Test - Native API Stability

    runs-on: ubuntu-latest

    steps:
      - name: Enable color for Npm output
        run: echo color = always >> .npmrc

      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Install Node dependencies without building locally
        run: npm ci

      - name: 'Debug: List post build files'
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/build.list

      - name: Add long username and groupname for test
        run: sudo useradd --user-group NameWithMoreThan15Chars

      - name: Run Tests with Prepared Git Dependency
        run: npm test -- --color
        env:
          TEST_IMPORT_OVERRIDE: ../build/Release/userid.node
          TEST_NODE_API: true
          TEST_LONG_USERNAME: NameWithMoreThan15Chars
          TEST_LONG_GROUPNAME: NameWithMoreThan15Chars

  checks:
    name: Check - Formatting, Spelling, & Linting

    runs-on: ubuntu-latest

    steps:
      - name: Enable color for Npm output
        run: echo color = always >> .npmrc

      - name: Install clang-tidy
        run: sudo apt-get install clang-tidy

      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Install Node dependencies and build
        run: npm ci

      - name: Run Formatting Checks
        # We allow any line endings in code but always commit and expect only LF
        run: npm run prettier -- --end-of-line lf

      - name: Run Spelling Checks
        run: npm run spelling

      - name: Run Lint Checks
        run: npm run lint #-- --use-color # Color needs clang-tidy >= 11.0.0

  coverage:
    needs: [test-native-api, install-and-run-from-git]

    name: Generate - Coverage Reports

    runs-on: ubuntu-latest

    steps:
      - name: Enable color for Npm output
        run: echo color = always >> .npmrc

      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Install Lcov
        run: sudo apt-get install lcov -y

      - name: 'Debug: Node version'
        run: node --version

      - name: Install
        run: npm ci --ignore-scripts

      - name: Build with Coverage collection
        run: npm run build-coverage

      - name: 'Debug: List post build files'
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/build.list

      - name: Test Coverage of JavaScript and C++
        run: npm run coverage-test

      - name: 'Debug: List post Coverage files'
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/coverage.list

      - name: 'Debug: Coverage diff'
        run: 'diff -U 0 /tmp/build.list /tmp/coverage.list || :'

      - name: Convert coverage info to useful format
        run: npm run coverage-convert

      - name: 'Debug: Print coverage report'
        run: lcov --list coverage/lcov.info

      - name: 'Debug: List post lcov files'
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/lcov.list

      - name: 'Debug: lcov diff'
        run: 'diff -U 0 /tmp/coverage.list /tmp/lcov.list || :'

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish - Master
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [coverage, install-and-run-from-git, checks]

    steps:
      - name: Enable color for Npm output
        run: echo color = always >> .npmrc

      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Create .npmrc with Auth Token
        run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc

      - name: Publish to npm
        run: npm publish
        env:
          NPM_TOKEN: ${{ secrets.npm_token }}
